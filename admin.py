from database.player_db import Player_DB
import re
from database.activity_db import Activity_DB
from database.ban_db import Ban_DB
from database.rating_db import Rating_DB

rating_db = Rating_DB()
player_db = Player_DB()
ban_db = Ban_DB()
activity_db = Activity_DB()

"""
–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–∞–Ω
"""
def get_user_ban(tg_id):
    ban = ban_db.check_ban(tg_id)
    if ban:
        return "–ê–∫—Ç–∏–≤–µ–Ω"
    else:
        return "–ù–µ –∞–∫—Ç–∏–≤–µ–Ω"

"""
–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–Ω–∞
"""
def upgrade_user_ban(tg_id, ban):
    if player_db.exists(tg_id):
        ban_db.set(tg_id, ban)
        return True
    else:
        return False


"""
–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤
"""
def upgrade_user_token(tg_id, token):
    if player_db.exists(tg_id):
        rating_db.set(tg_id, int(token))
        return True
    else:
        return False

"""
–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–¥–Ω–æ–º –∞–∫–∫–∞—É–Ω—Ç–µ
"""
def get_info_acc(tg_id):
    if player_db.exists(tg_id):
        user = player_db.get(tg_id)
        ban = get_user_ban(tg_id)
        data_string = f"–ò–º—è: {user.name}\n"\
                      f"–†–µ–π—Ç–∏–Ω–≥: {user.token} üèÜ \n" \
                      f"–ë–∞–Ω: {ban}\n" \
                      f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥: {user.wins_cnt}\n" \
                      f"–ö–æ–ª—á–µ—Å—Ç–≤–æ –ø—Ä–æ–∏–≥—Ä—ã—à–µ–π: {user.losses_cnt}\n" \
                      f"–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {user.date_registration}\n" \
                      f"–î–æ–ª–∂–Ω–æ—Å—Ç—å: {user.post}"
        return data_string

"""
–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∏—Ö
"""
def get_info_all():
    users = player_db.get_all()
    result = ""
    for user in users:
        ban = get_user_ban(user.tg_id)
        result += f"–ò–º—è: {user.name}; id: {user.tg_id}; –†–µ–π—Ç–∏–Ω–≥: {user.token}; –ë–∞–Ω: {ban}\n"
    return result

def get_id(message):
    pattern = r"\d+;\s[\w\s]+"
    if re.match(pattern, message):
        parts = message.split(";")
        id = parts[0]
        return id


"""
–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""
def get_purpose(message):
    pattern = r"\d+;\s[\w\s]+"
    if re.match(pattern, message):
        parts = message.split(";")
        text = parts[1].strip()
        return text


"""
–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —Å–∫–æ–ª—å–∫–æ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å
–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π
"""
def get_info_new_user(cnt_day):
    users = player_db.check_new_user(int(cnt_day))
    i = 0
    result = f"–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–æ—Å—å {len(users)} –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n"
    for user in users:
        i+=1
        result += f"{i+1}. –ò–º—è: {user.name}; id: {user.tg_id}; –†–µ–π—Ç–∏–Ω–≥: {user.token}üèÜ\n"
    return result

"""
–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–ø –ª—É—á—à–∏—Ö –∏–≥—Ä–æ–∫–æ–≤
"""
def get_top():
    users = player_db.get_all()

    length = len(users)
    if length >= 10:
        length = 10
    result = ""

    sorted_users = sorted(users, key=lambda u: u.token, reverse=True)

    for i in range(length):
        user = sorted_users[i]
        result += f"{i+1}. –ò–º—è: {user.name}; –†–µ–π—Ç–∏–Ω–≥: {user.token}üèÜ\n"

    return result


"""
–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""
def get_info_activity(day):
    info = activity_db.check_activity(int(day))
    result = f"–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ({day}) –¥–Ω–µ–π –±—ã–ª–æ —Å—ã–≥—Ä–∞–Ω–æ {len(info)} –∏–≥—Ä"
    return result